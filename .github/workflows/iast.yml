name: IAST
on:
  push:
    branches:
      - main

jobs:
  dast:
    name: DAST
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Create isolated network
      run: docker network create --driver bridge isolated

    - name: Deploy AUT
      run: docker build -t my-php-site:latest .

    - name: Run AUT
      run: docker run --network isolated -p 80:80 --name docker-apache -t -d my-php-site:latest

    - name: Get AUT URL
      run: |
        URL=http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1)
        echo "URL=$URL" >> $GITHUB_ENV

    - name: Check AUT Url
      run: curl ${{ env.URL }}

    - name: ZAP Scan
      uses: zaproxy/action-full-scan@v0.4.0
      with:
        target: ${{ env.URL }}
        args: '-t 12000 -r zap_report.html -J zap_report.json -w zap_report.md -x zap_report.xml --auto -m 20 -z "-config api.key=12345 -config spider.maxDuration=20 -config scanner.attackOnStart=true -config scanner.attackStrength=INSANE -config scanner.alertThreshold=LOW -config xssscanner.enabled=true -config xssscanner.attackStrength=INSANE -config xssscanner.alertThreshold=LOW"'
        network_name: isolated

    - name: Upload ZAP Report
      uses: actions/upload-artifact@v2
      with:
        name: zap-report
        path: zap_report.html

    - name: Stop Docker
      run: docker stop docker-apache

  sast:
    name: Psalm
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Psalm Security Scan
      uses: docker://ghcr.io/psalm/psalm-security-scan

    - name: Import Security Analysis results into Github Security Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif
